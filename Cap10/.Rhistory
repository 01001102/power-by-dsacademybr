frase <- "Muitas vezes temos que repetir algo diversas vezes e essas diversas vezes parecem algo estranho"
palavras <- strsplit(frase, " ")[[1]]
palavras
unique(tolower(palavras))
url <- 'http://espn.go.com/nfl/superbowl/history/winners'
pagina <- read_html(url)
tabela <- html_nodes(pagina, 'table')
library(rvest)
pagina <- read_html(url)
tabela <- html_nodes(pagina, 'table')
tab <- tab[-(1:2), ]
tabela <- tabela[-(1:2), ]
names(tabela) <- c("number", "date", "site", "result")
setwd("~/Dropbox/DSA_Original/PowerBI-DataScience/Cap10")
install.packages("Amelia")
install.packages("caret")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("reshape")
install.packages("randomForest")
install.packages("e1071")
library(Amelia)
library(ggplot2)
library(caret)
library(reshape)
library(randomForest)
library(dplyr)
library(e1071)
dataset <- read.csv("credit-card.csv")
# Visualizando os dados e sua estrutura
View(dataset)
str(dataset)
head(dataset)
head(dataset$AGE)
dataset$AGE <- cut(dataset$AGE, c(0,30,50,100), labels = c("Jovem","Adulto","Idoso"))
head(dataset$AGE)
dataset$SEX <- cut(dataset$SEX, c(0,1,2), labels = c("Masculino","Feminino"))
head(dataset$SEX)
dataset$EDUCATION <- cut(dataset$EDUCATION, c(0,1,2,3,4),
labels = c("Pos Graduado","Graduado","Ensino Medio","Outros"))
head(dataset$EDUCATION)
dataset$MARRIAGE <- cut(dataset$MARRIAGE, c(-1,0,1,2,3),
labels = c("Desconhecido","Casado","Solteiro","Outros"))
head(dataset$MARRIAGE)
dataset$PAY_0 <-as.factor(dataset$PAY_0)
dataset$PAY_2 <-as.factor(dataset$PAY_2)
dataset$PAY_3 <-as.factor(dataset$PAY_3)
dataset$PAY_4 <-as.factor(dataset$PAY_4)
dataset$PAY_5 <-as.factor(dataset$PAY_5)
dataset$PAY_6 <-as.factor(dataset$PAY_6)
dataset$default.payment.next.month <- as.factor(dataset$default.payment.next.month)
head(dataset)
str(dataset)
# Renomeando a coluna de classe
colnames(dataset)
colnames(dataset)[25] <- "inadimplente"
colnames(dataset)
sapply(dataset, function(x) sum(is.na(x)))
missmap(dataset, main = "Valores Missing Observados")
dataset <- na.omit(dataset)
dataset$ID <- NULL
table(dataset$inadimplente)
qplot(inadimplente, data = dataset, geom = "bar") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
set.seed(12345)
TrainingDataIndex <- createDataPartition(dataset$inadimplente, p = 0.45, list = FALSE)
TrainingDataIndex
trainData <- dataset[TrainingDataIndex,]
table(trainData$inadimplente)
prop.table(table(trainData$inadimplente))
nrow(trainData)
DistributionCompare <- cbind(prop.table(table(trainData$inadimplente)), prop.table(table(dataset$inadimplente)))
colnames(DistributionCompare) <- c("Treinamento", "Original")
DistributionCompare
meltedDComp <- melt(DistributionCompare)
meltedDComp
ggplot(meltedDComp, aes(x = X1, y = value)) + geom_bar( aes(fill = X2), stat = "identity", position = "dodge") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
testData <- dataset[-TrainingDataIndex,]
TrainingParameters <- trainControl(method = "cv", number = 10)
# Construindo o Modelo
rf_model <- randomForest(inadimplente ~ ., data = trainData)
rf_model
